name: 'test'

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 1'

jobs:

  # ==============================
  # COMPILACIÓN EN UBUNTU
  # ==============================
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: sudo apt install -y build-essential liballegro4-dev
      - name: Build and install juegocpp (Linux)
        run: |
          cd Clases
          make
          make install
          cd ..
          mkdir -p juegocpp
          mv Extras/juegocpp juegocpp/
      - uses: actions/upload-artifact@v4
        with:
          name: juegocpp-linux
          path: juegocpp


  # ==============================
  # COMPILACIÓN EN WINDOWS / MSYS2
  # ==============================
  build:
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: MINGW32, runner: windows-2022 },
          { msystem: MINGW64, runner: windows-2022 },
          { msystem: UCRT64,  runner: windows-2022 },
        ]
    name: ${{ matrix.msystem }}
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Get CPU Name
        run: Get-CimInstance -Class Win32_Processor | Select-Object -Property Name

      - uses: actions/checkout@v3
        with:
          path: temp
          fetch-depth: 0
          persist-credentials: false

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: git base-devel unzip wget mingw-w64-${{ matrix.msystem == 'MINGW32' && 'i686' || (matrix.msystem == 'MINGW64' && 'x86_64' || 'ucrt-x86_64') }}-gcc
          update: true
          release: ${{ runner.arch != 'ARM64' }}
          location: 'D:\M'

      - name: "Check GCC & Unzip"
        shell: msys2 {0}
        run: |
          gcc --version
          unzip -v

      - name: "Download Allegro & source"
        shell: msys2 {0}
        run: |
          wget -q http://cdn.allegro.cc/file/library/allegro/4.4.2/allegro-4.4.2-mingw-4.4.0.zip
          wget -q https://github.com/juanmard/juegocpp/archive/refs/heads/test-allegro4.2.zip
          unzip -q allegro-4.4.2-mingw-4.4.0.zip
          unzip -q test-allegro4.2.zip
          ls -la

      - name: "Compile all sources"
        shell: msys2 {0}
        run: |
          cd juegocpp-test-allegro4.2/Clases
          SRC=$(ls *.cpp)
          echo "Compiling: $SRC"
          for f in $SRC; do
            echo "-> $f"
            g++.exe -Wall -fexceptions -g -I../../allegro-4.4.2-mingw-4.4.0/include -c $f -o ${f%.cpp}.o
          done

      - name: "Link all objects"
        shell: msys2 {0}
        run: |
          cd juegocpp-test-allegro4.2/Clases
          g++.exe -lwinpthread -static -static-libgcc -static-libstdc++ \
            -L../../allegro-4.4.2-mingw-4.4.0/lib \
            -o ../Extras/test_juego.exe *.o ../../allegro-4.4.2-mingw-4.4.0/lib/liballegro-4.4.2-monolith-md-debug.a
          ls -la ../Extras

      - name: "Copy DLLs"
        shell: msys2 {0}
        run: |
          cd juegocpp-test-allegro4.2/Extras
          DLL_DIR="/c/msys64/${MSYSTEM}/bin"
          echo "Copying DLLs from $DLL_DIR"
          cp "$DLL_DIR"/libgcc_s*.dll . 2>/dev/null || true
          cp "$DLL_DIR"/libstdc++*.dll . 2>/dev/null || true
          cp "$DLL_DIR"/libwinpthread-1.dll . 2>/dev/null || true
          cp ../../allegro-4.4.2-mingw-4.4.0/bin/allegro-4.4.2-monolith-md-debug.dll . 2>/dev/null || true
          echo "Final content:"
          ls -la

      - name: "Upload Windows build"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.msystem }}-packages
          path: juegocpp-test-allegro4.2/Extras/*
